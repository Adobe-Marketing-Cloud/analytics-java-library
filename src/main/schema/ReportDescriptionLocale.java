//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 11:03:57 AM CEST 
//


package com.adobe.analytics.domain;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for reportDescriptionLocale.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="reportDescriptionLocale">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="en_US"/>
 *     &lt;enumeration value="de_DE"/>
 *     &lt;enumeration value="es_ES"/>
 *     &lt;enumeration value="fr_FR"/>
 *     &lt;enumeration value="jp_JP"/>
 *     &lt;enumeration value="ko_KR"/>
 *     &lt;enumeration value="pt_BR"/>
 *     &lt;enumeration value="zh_CN"/>
 *     &lt;enumeration value="zh_TW"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "reportDescriptionLocale")
@XmlEnum
public enum ReportDescriptionLocale {

    @XmlEnumValue("en_US")
    EN_US("en_US"),
    @XmlEnumValue("de_DE")
    DE_DE("de_DE"),
    @XmlEnumValue("es_ES")
    ES_ES("es_ES"),
    @XmlEnumValue("fr_FR")
    FR_FR("fr_FR"),
    @XmlEnumValue("jp_JP")
    JP_JP("jp_JP"),
    @XmlEnumValue("ko_KR")
    KO_KR("ko_KR"),
    @XmlEnumValue("pt_BR")
    PT_BR("pt_BR"),
    @XmlEnumValue("zh_CN")
    ZH_CN("zh_CN"),
    @XmlEnumValue("zh_TW")
    ZH_TW("zh_TW");
    private final String value;

    ReportDescriptionLocale(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ReportDescriptionLocale fromValue(String v) {
        for (ReportDescriptionLocale c: ReportDescriptionLocale.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
