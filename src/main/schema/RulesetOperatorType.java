//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 11:03:57 AM CEST 
//


package com.adobe.analytics.domain;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ruleset_operator_type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ruleset_operator_type">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="equals"/>
 *     &lt;enumeration value="contains"/>
 *     &lt;enumeration value="not_contains"/>
 *     &lt;enumeration value="starts_with"/>
 *     &lt;enumeration value="not_starts_with"/>
 *     &lt;enumeration value="ends_with"/>
 *     &lt;enumeration value="not_ends_with"/>
 *     &lt;enumeration value="exists"/>
 *     &lt;enumeration value="not_exists"/>
 *     &lt;enumeration value="is_empty"/>
 *     &lt;enumeration value="is_not_empty"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ruleset_operator_type")
@XmlEnum
public enum RulesetOperatorType {

    @XmlEnumValue("equals")
    EQUALS("equals"),
    @XmlEnumValue("contains")
    CONTAINS("contains"),
    @XmlEnumValue("not_contains")
    NOT_CONTAINS("not_contains"),
    @XmlEnumValue("starts_with")
    STARTS_WITH("starts_with"),
    @XmlEnumValue("not_starts_with")
    NOT_STARTS_WITH("not_starts_with"),
    @XmlEnumValue("ends_with")
    ENDS_WITH("ends_with"),
    @XmlEnumValue("not_ends_with")
    NOT_ENDS_WITH("not_ends_with"),
    @XmlEnumValue("exists")
    EXISTS("exists"),
    @XmlEnumValue("not_exists")
    NOT_EXISTS("not_exists"),
    @XmlEnumValue("is_empty")
    IS_EMPTY("is_empty"),
    @XmlEnumValue("is_not_empty")
    IS_NOT_EMPTY("is_not_empty");
    private final String value;

    RulesetOperatorType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static RulesetOperatorType fromValue(String v) {
        for (RulesetOperatorType c: RulesetOperatorType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
