//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 11:03:57 AM CEST 
//


package com.adobe.analytics.domain;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for allocation_type_enum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="allocation_type_enum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="most_recent_last"/>
 *     &lt;enumeration value="original_value_first"/>
 *     &lt;enumeration value="linear"/>
 *     &lt;enumeration value="linear_to_items"/>
 *     &lt;enumeration value="merchandising_last"/>
 *     &lt;enumeration value="merchandising_first"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "allocation_type_enum")
@XmlEnum
public enum AllocationTypeEnum {

    @XmlEnumValue("most_recent_last")
    MOST_RECENT_LAST("most_recent_last"),
    @XmlEnumValue("original_value_first")
    ORIGINAL_VALUE_FIRST("original_value_first"),
    @XmlEnumValue("linear")
    LINEAR("linear"),
    @XmlEnumValue("linear_to_items")
    LINEAR_TO_ITEMS("linear_to_items"),
    @XmlEnumValue("merchandising_last")
    MERCHANDISING_LAST("merchandising_last"),
    @XmlEnumValue("merchandising_first")
    MERCHANDISING_FIRST("merchandising_first");
    private final String value;

    AllocationTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AllocationTypeEnum fromValue(String v) {
        for (AllocationTypeEnum c: AllocationTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
